// // INITIATE MARGINS AND PADDING

@mixin property($property, $values) {

  $top:    if($property == 'absolute', "top", $property + "-top");
  $bottom:    if($property == 'absolute', "bottom", $property + "-bottom");
  $right:    if($property == 'absolute', "right", $property + "-right");
  $left:    if($property == 'absolute', "left", $property + "-left");

  @if length($values) == 1 {
    #{$top}: nth($values, 1) * $base-space;
    #{$bottom}: nth($values, 1) * $base-space;
    #{$right}: nth($values, 1) * $base-space;
    #{$left}: nth($values, 1) * $base-space;
  } @else if length($values) == 2 {
    #{$top}: nth($values, 1) * $base-space;
    #{$bottom}: nth($values, 1) * $base-space;
    #{$right}: nth($values, 2) * $base-space;
    #{$left}: nth($values, 2) * $base-space;
  } @else if length($values) == 3 {
    #{$top}: nth($values, 1) * $base-space;
    #{$bottom}: nth($values, 3) * $base-space;
    #{$right}: nth($values, 2) * $base-space;
    #{$left}: nth($values, 2) * $base-space;
  } @else if length($values) == 4 {
    #{$top}: nth($values, 1) * $base-space;
    #{$bottom}: nth($values, 3) * $base-space;
    #{$right}: nth($values, 2) * $base-space;
    #{$left}: nth($values, 4) * $base-space;
  }

}

@mixin padding($values) {
  @include property(padding, $values);
}

@mixin margin($values) {
  @include property(margin, $values);
}

@mixin absolute($values) {
  @include property(absolute, $values);
}