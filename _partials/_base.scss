// INITIATE BASIC CLASSES

@function text($size, $type: default) {
  @return map-get(map-get($texts, $size), $type);
}

@function line($size) {
  @return map-get($lines, $size);
}

@function color($type) {
  @return map-get($colors, $type);
}


// BORDER-BOX, RESET

html {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

*,
*:after,
*:before {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit;
}

* {
  margin: 0;
  letter-spacing: 0.015em;
  word-spacing: 0.001em;

  @if $font-smoothing-moz==true {
    -moz-osx-font-smoothing: grayscale;
  }

  @if $font-smoothing-webkit==true {
    -webkit-font-smoothing: antialiased;
  }
}

body,
html {
  -webkit-tap-highlight-color: transparent;
  height: 100%;
  margin: 0 !important;
  padding: 0 !important;
}

// __________________________________________________________ //

// TYPE SIZE

@function get-vw($target) {
  $vw-context: ($viewport-width-px * 0.01) * 1px;
  @return ($target / $vw-context) * 1vw;
}

html,
body {
  font-size: text(default, sm);
  line-height: line(default);
  color: color(text);
  background-color: color(background);
  @extend .font-#{$main-font};

  @include mq(sm) {
    font-size: text(default, default);
    @if $is-global-viewport-text==true {
      font-size: get-vw(text(default, default));
    }
  }
}

html {
  background: color(background);
}

a {
  color: color(link);
  text-decoration: none;

  &:hover,
  &:hover * {
    color: color(hover);
    text-decoration: none;
    cursor: pointer;
  }
}

ul,
ol {
  margin: 0;
  padding: 0;
}

ul {
  list-style-type: none;
}

img {
  width: 100%;
}

strong, b {
  font-weight: normal;
}


// __________________________________________________________ //

// TRANSITIONS

@mixin transition(
  $property: $transition-property-default,
  $duration: $transition-duration-default,
  $timing: $transition-timing-default,
  $delay: $transition-delay-default
) {
  transition-property: $property;
  transition-duration: $duration;
  transition-timing-function: $timing;
  transition-delay: $delay;
}

.transition {
  @include transition;
}

// DISPLAYS

.df {
  display: flex;
}

.db {
  display: block;
}

.dib {
  display: inline-block;
}

.di {
  display: inline;
}

.dt {
  display: table;
}

.dtc {
  display: table-cell;
}

.dtr {
  display: table-row;
}

.dn {
  display: none;
}


// FLOAT

.fl {
  float: left;
}

.fr {
  float: right;
}

.fn {
  float: none;
}

.cf:after {
  content: '';
  display: block;
  clear: both;
}


// OVERFLOW

.oh {
  overflow: hidden;
}

.os {
  overflow: scroll;
}

.ov {
  overflow: visible;
}

.oxh {
  overflow-x: hidden;
}

.oxs {
  overflow-x: scroll;
}

.oxv {
  overflow-x: visible;
}

.oyh {
  overflow-y: hidden;
}

.oys {
  overflow-y: scroll;
}

.oyv {
  overflow-y: visible;
}


// POSITION

.psa {
  position: absolute;
}

.psr {
  position: relative;
}

.psf {
  position: fixed;
}

.pss {
  position: sticky;
}
